<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lbl_intro.Text" xml:space="preserve">
    <value>The training data for the neuronal network has to be a collection of images. The more data you provide, the higher is the chance of a better trained network.  These images can either match a required object or not.
It's now time to catch some nice photos!
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbxIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhMAAwAPcAAP///9yIMuanaPzky1NieGtGN2VlZuPj4/nJaRpns01MZf3r0/zaunE7Ifi7hHNz
        cyOU0PaqZk80KmxtbF5hY1djhypKduvr6/rKndLS0naty/S1YuOcUvzhxP7x2NyJNfrFk+qzelLH8vvS
        q8rp+d+RQvLy8uj1/PrNov/58uakXzh0rsvLy5VzWPrVi4ODg/vbnN6PPpN8YvrZthhNoGs3IrGUh6RK
        KiooXPzjs/Hq4P/69f3y5f/+/fzdo/TEhaXe97JOLKWlpfL6/olDJYqKiiJFjfnMc5mZmfSnQv3u3sWr
        mbB/TGtocsXFxbu7u/jFWpect/rShPnBjf3mu9jY2f3sy1mszZOTk8+1pfzpw/vVsfj4+I6Gb7S0tKur
        q+GVSfazXP706fi+iDg2Ynt7e93d3fvZrfSrTNNWLtyIMyotZPzgrCc4df757Pzn0Pv7+/LTs82ZZva8
        cCKr4llcXox3cP7z6GrO9frXkf/9+ntyZfW1eOCTRT3G8/zewbjk+feydH3T9h6Fx/39/dOtWtLs+VJV
        VlVWVhxgpvrRp5NFJxN4vu7BlCVbmd2MOuOeWVlaWmNnahxKl5LZ9/i2ezS35/vt2v3t2eKYTmJqbseH
        Rvz+///9/N7z/OhaL/jp2fbhy92LOFVYWvO8X1FSUvrHmPnPevnQfvi4f//89v/27v7w4f704P725bSL
        Yf///p+fn15eXnx3biq+7/nLkvrZl7tPLCY/gvjFhP3q18VSLSzA8fWwV7nW65Sfp9LIwK6lp2NVUNdm
        Q3NoZniTweTn7vfKkPTNm6B6Ua21zPfWqUE0MSJkgK6VW+Oob7xVNFOgze23bydfoNiQR9Sfju29jOfg
        3p+YlSk0bve6g/C/j5mEgq6gm/a/eW/I63jH7vbQnvLBY/rSnzWmy/bZtGdXaK+ddH14cPjIibfD2eLc
        3faubphYP6Gnqvvw5UhHTqODYaqRZmqAjLqtrIDJ74fM8P7///HKovHOq/jDf49zZ4mQqICs0bF3RP//
        /yH5BAEAAP8ALAAAAAAwADAAAAj/AP8JHEiwoMGDCBMqXMiQYJZ2N4LsSjOs2jUuDTMmNGGnwaIbt9J8
        +pQG2pILcDSqFDjkm4ZfxArcEEny1o0W6zCubOhJhD1DQwiZcFcg5K4gNxbtq5Jyp0JDluqRCHpviCcS
        82ogXUSkAbYDThMCsQRuKicAVkkAAqJBApGuDQo4CXsQ2IpoJE4QQnt1LSVBV5g1GNwACd2CP5Kkq6Is
        irG0fgXhEUFOAuEyhwWmmJPkzI4eAO7Z4Ocr8mQ/tJrVGPwgM48NaDp8Dg0iAjtu/f6epkUHguAGrele
        QtNrwGwApmxXcmBDw2levQdZqFFgAt0ZSTawSgEaeYRAlcaA/8CQJZof6BAGMUokQVjwneGS6BPDHQAA
        DBH4pJoCAsWIGfRAEB0jCSQADyIvOJVYLfSBtgMG7PDhwBSmoLAFAx10YEd6BCbgiCSRCLFSCrAt0yAA
        O2jDTnhTYKDIFn8MMAAHahDQ4TSalFIGCypd0ktsJ+7gQCCpiOfiDDG+wUEAaviTiIeaHDKBFxdo9AYa
        YbwR5BhE8ucfhm8oqUYAZBKQCAGjGPDFAU0xhN0cumwpIYUWYqgLKwKQqac/BNRBQSxmtLlQYrkocUd9
        O0zBooswDqALDyHoqecedciCRBU6LZSCN0mMY2h97zhQ5Hj//fGGEmJEKqkaLVAQCRYZZP+q0GtozPAp
        aO+kog2dI4DJyiqq6skqBYgUEWtDw4XBwK0A8KDNhBVe2MGdKTSy6gfJEPsCCyY0NAOWA7BCXyfNOmDk
        izHqcscOcVzLhCQIOtEtQ8sk4Y0un5LLwxhGlnqqGHq0S6YaH4jyro5PzDtoErXgeyi5uozBq6+rBCxs
        wZvk+MATFxDCEA9JHBNHCNY0EkooDED7IgOO8sBdKAMX/MgmE0hJpccMlZOEErDA8s7IJYjCx5ExYrIu
        LKDEEMAHMtMs5Zo9ZPRDGPZVDUDSaoTAgKmo6nF1DASL8kgM1OyRphBsaoRGOrBYDQAsbyi9zRu/kps0
        02KXULafgAr/utAlSXTgth47uIEJjfhwd08KMcgcQwlgUGoppiohk0QKVcOiSgqutOKBFhx8EAcAKUBS
        8ON9gCGDq7DK2tAGc9gHSw8puOGKBwtYoUUOHMSQDyRiPw5GJqsXe6xKKXQGQA+q2O65FVZQQQUbPnDQ
        hyiog8FBPNpyu1MHSWCiR+3P605FDtTDIE0fMaSeCQevwPuCvAr20nznHpiPvg8+2JKHCmDoQyYyAYn4
        IUxhKzGHHXTwPC1o4Xzpy4MLpCCAAXIAEnLQGMdwtpJ14AAHZAiG/tLnvwmeAhIXVIEcajaljoUlCh/8
        YDcg6AMYSFAKqDjFEVQACRWycE0c3EkFyNYQQxwsoYYllIIOESAOAQjgGbM4W9ro0oY2EPGDTbDhBFFx
        hCMgAAqkeAYU+Raow6jDCLiw4gfJ4AIX5NCLXwRjCGZRqUu5bifFmAQasxFDHJ4CAUwsRCGcIQ90sO54
        h1kBDSaBCwuQQQEKOEcXujALTWiCApj0EwWMdUenEIAAE8CkLDRJAQMYYAIPeMALioAFJHwhAwg8jBmQ
        kMpVtlIIX/DCE5zAggxUwQwHOMAFOhkWE1QhA74EpjAvYAIT+C0z0IxmQQICADs=
</value>
  </data>
  <metadata name="imlMatching.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>20, 20</value>
  </metadata>
  <metadata name="imlNotMatching.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>18, 47</value>
  </metadata>
  <data name="chkMatching.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhCwAMAPMAAAAAAP///+7u7v///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH5BAEAAAIALAAAAAALAAwAAAQhUEhAqbwChA3w3EHnaZyXgSJGhle1uieItjKrzqaW5l4EADs=
</value>
  </data>
  <data name="chkNotMatching.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhCwAMAPMAAAAAAP///+7u7v///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH5BAEAAAIALAAAAAALAAwAAAQhUEhAqbwChA3w3EHnaZyXgSJGhle1uieItjKrzqaW5l4EADs=
</value>
  </data>
</root>